#name: Run tests and sync branches

#env:
#  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

#on:
#  push:
#    branches:
#      - 'staging'
#
#jobs:
#  Tests:
#    name: Tests # название конктретной работы в pipeline
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout  # клонируем репозиторый
#        uses: actions/checkout@v3
#
#      - name: Install dependencies
#        run: yarn # устанавливаем зависимости
#
#      - name: Test
#        run: yarn test:e2e # запускаем скрипт тестами
#        env:
#          MONGO_URI: ${{ secrets.MONGO_URI }}
#          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
#          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
#          ACCESS_TOKEN_LIFE_TIME: ${{ secrets.ACCESS_TOKEN_LIFE_TIME }}
#          REFRESH_TOKEN_LIFE_TIME: ${{ secrets.REFRESH_TOKEN_LIFE_TIME }}
#
#  Sync-main-branch:
#    name: Sync-main-branch
#    runs-on: ubuntu-latest
#    needs: Tests
#    steps:
#      - uses: actions/checkout@master
#      - name: Merge staging -> main
#        uses: devmasx/merge-branch@master
#        with:
#          type: now
#          from_branch: staging
#          target_branch: main
#          github_token: ${{ github.token }}

#  Deploy-To-Vercel:
#    runs-on: ubuntu-latest
#    needs: Sync-main-branch
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          path: main
#      - name: Setup Node 14
#        uses: actions/setup-node@v2
#        with:
#          node-version: '14'
#      - uses: actions/cache@v1
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: ${{ runner.os }}-node-
#        env:
#          VERCEL_URL: ${{ steps.deploy-vercel-staging.outputs.preview-url }}
#          run: npm run test

name: Deploy Torchlight Engine
on: [ push, pull_request ]
jobs:
  vercel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Build
        run: |
          yarn install --frozen-lockfile
          npm run build

      - name: Run Tests Locally
        run: npm run test
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          ACCESS_TOKEN_LIFE_TIME: ${{ secrets.ACCESS_TOKEN_LIFE_TIME }}
          REFRESH_TOKEN_LIFE_TIME: ${{ secrets.REFRESH_TOKEN_LIFE_TIME }}

      - name: Deploy to Staging
        id: deploy-vercel-staging
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_TL_ENGINE }}
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Run Tests Against Vercel
        env:
          VERCEL_URL: ${{ steps.deploy-vercel-staging.outputs.preview-url }}
        run: npm run test

      - name: Deploy to Production
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_TL_ENGINE }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}